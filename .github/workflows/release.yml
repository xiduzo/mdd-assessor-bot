# https://dev.to/erikhofer/build-and-publish-a-multi-platform-electron-app-on-github-3lnd
name: Electron/publish
on:
    release:
        types:
            - created

jobs:
    release:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]

        steps:
            - name: Install the Apple certificate
              if: runner.os == 'macOS'
              env:
                  BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
                  P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
                  BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
                  KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
              run: |
                  # create variables
                  CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
                  PP_PATH=$RUNNER_TEMP/build_pp.provisionprofile
                  KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

                  # import certificate and provisioning profile from secrets
                  echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
                  echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

                  # create temporary keychain
                  security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
                  security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
                  security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

                  # import certificate to keychain
                  security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
                  security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
                  security list-keychain -d user -s $KEYCHAIN_PATH

                  # apply provisioning profile
                  mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
                  cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

            - uses: actions/checkout@v4

            - name: Cache node modules
              uses: actions/cache@v4
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

            - uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install dependencies
              run: npm ci

            - name: Publish application
              run: npm run publish
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APPLE_IDENTITY: ${{ vars.APPLE_IDENTITY }}
                  APPLE_ID: ${{ vars.APPLE_ID }}
                  APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}
                  APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}

            - name: Publish application
              if: runner.os == 'macOS'
              run: npm run publish:intel
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APPLE_IDENTITY: ${{ vars.APPLE_IDENTITY }}
                  APPLE_ID: ${{ vars.APPLE_ID }}
                  APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}
                  APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}

            - name: Clean up keychain and provisioning profile
              if: runner.os == 'macOS'
              run: |
                  security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
                  rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.provisionprofile
