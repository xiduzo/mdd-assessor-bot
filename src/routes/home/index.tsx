import {
  Indicator,
  IndicatorIconWithBackground,
  IndicatorLevel,
  IndicatorProgress,
  indicators,
  IndictorIcon,
} from "@/components/custom/Indicator";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { ScrollArea } from "@/components/ui/scroll-area";
import { ArrowLeft, ArrowRight, Copy } from "lucide-react";
import { useMemo } from "react";
import Markdown from "react-markdown";
import { toast } from "sonner";

export function HomeRoute() {
  return (
    <div className="p-4 min-h-lvh">
      <h1 className="font-bold text-4xl">Let's review your portfolio 👀</h1>
      <Card>
        <CardHeader>
          <CardTitle className="text-center mb-6">Results</CardTitle>
          <section className="grid grid-cols-5 gap-8">
            {indicators.map((indocator) => (
              <Card key={indocator} className="text-center">
                <CardHeader className="items-center py-3">
                  <IndictorIcon indicator={indocator} size={20} />
                </CardHeader>
                <CardContent className="pb-2">
                  <IndicatorProgress
                    indicator={indocator}
                    value={60}
                    className="h-3"
                  />
                </CardContent>
                <CardFooter className="pb-2 text-xs">
                  <span className="grow text-center first-letter:capitalize">
                    {indocator.replaceAll("-", " ")}
                  </span>
                </CardFooter>
              </Card>
            ))}
          </section>
        </CardHeader>
        <CardContent className="grid grid-cols-2 gap-20">
          {indicators.map((indicator) => (
            <IndicatorResult key={indicator} indicator={indicator} />
          ))}
        </CardContent>
      </Card>
    </div>
  );
}

const markdown = `# Feedback
lorum ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc. lorum ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc. lorum ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc. lorum ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc.

## Positives
lorum ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc. lorum ipsum dolor sit amet,

lorum ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec nunc. lorum ipsum dolor sit amet,

## Areas for improvement
- test 1
- test 2

1. test 1
2. test 2
- test 1
- test 2

1. test 1
2. test 2
- test 1
- test 2

1. test 1
2. test 2
- test 1
- test 2

1. test 1
2. test 2`;

function IndicatorResult(props: { indicator: Indicator }) {
  const items = useMemo(() => {
    return [
      "1.1 World view",
      "1.2 Personal perspective",
      "1.3 Peer perspective",
    ];
  }, []);

  return (
    <section className="flex space-x-6">
      <IndicatorIconWithBackground indicator={props.indicator} />
      <div className="grow">
        <h2 className="font-bold mb-2 first-letter:capitalize">
          {props.indicator.replaceAll("-", " ")}
        </h2>
        <ol className="space-y-2">
          {items.map((item) => (
            <li key={item} className="flex space-x-4 items-center">
              <div className="flex-grow">{item}</div>
              <IndicatorLevel level="visionary" />
              <Dialog>
                <DialogTrigger asChild>
                  <Button variant="link">Read feedback</Button>
                </DialogTrigger>
                <DialogContent className="max-w-4xl">
                  <DialogHeader>
                    <DialogTitle className="flex space-x-4">
                      <IndicatorIconWithBackground
                        indicator={props.indicator}
                      />
                      <div className="flex flex-col justify-between">
                        <span className="first-letter:uppercase">
                          {props.indicator.replaceAll("-", " ")}
                        </span>
                        <span className="text-sm font-light">{item}</span>
                      </div>
                    </DialogTitle>
                  </DialogHeader>
                  <DialogDescription>
                    The feedback below is generated by a Large Langiage Model
                    (LLM) and is inherently flawed. The feedback is meant as an
                    initial starting point for your reflection, please refer to
                    the teaching staff for proper feedback and guidance.
                  </DialogDescription>
                  <section className="flex space-x-8">
                    <IndicatorLevel level="visionary" />
                    <ScrollArea className="max-h-[55vh]">
                      <Button
                        variant="outline"
                        size="icon"
                        className="absolute right-4 top-0"
                        onClick={() => {
                          navigator.clipboard.writeText(`
========================
⚠️ Disclaimer ⚠️
The feedback below is generated by a Large Langiage Model
(LLM) and is inherently flawed. The feedback is meant as an
initial starting point for your reflection, please refer to
the teaching staff for proper feedback and guidance.
========================

Feedback generated on 31/03/1994 23:04 using ollama3

------------------------
${props.indicator.replaceAll("-", " ")} - ${item}
------------------------

${markdown}`);
                          toast.success("Feedback copied to clipboard");
                        }}
                      >
                        <Copy />
                      </Button>
                      <Markdown
                        components={{
                          h1: ({ children }) => (
                            <h1 className="font-bold text-xl">{children}</h1>
                          ),
                          h2: ({ children }) => (
                            <h2 className="font-semibold mt-4 text-lg">
                              {children}
                            </h2>
                          ),
                          p: ({ children }) => (
                            <p className="mb-0.5">{children}</p>
                          ),
                          ul: ({ children }) => (
                            <ul className="list-disc list-inside">
                              {children}
                            </ul>
                          ),
                          ol: ({ children }) => (
                            <ol className="list-decimal list-inside">
                              {children}
                            </ol>
                          ),
                        }}
                      >
                        {markdown}
                      </Markdown>
                    </ScrollArea>
                  </section>
                  <div className="mt-3 italic text-muted-foreground text-center text-xs">
                    Feedback generated using ollama3 at 31/03/1994 23:04
                  </div>
                  <DialogFooter className="grid grid-cols-2">
                    <Button variant="outline">
                      <ArrowLeft />
                      Previous disciplinary
                    </Button>
                    <Button>
                      Next disciplinary
                      <ArrowRight />
                    </Button>
                  </DialogFooter>
                </DialogContent>
              </Dialog>
            </li>
          ))}
        </ol>
      </div>
    </section>
  );
}
