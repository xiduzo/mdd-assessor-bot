import {
  CompetencyDisplay,
  CompetencyIconWithBackground,
  IndicatorLevelProgress,
} from "@/components/custom/Indicator";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { ScrollArea } from "@/components/ui/scroll-area";
import {
  competenciesWithIncidactors,
  CompetencyWithIndicators,
} from "@/lib/types";
import { ArrowLeft, ArrowRight, Copy } from "lucide-react";
import Markdown from "react-markdown";
import { toast } from "sonner";

export function HomeRoute() {
  return (
    <div className="p-4 min-h-lvh">
      <h1 className="font-bold text-4xl">Let's review your portfolio 👀</h1>
      <Card>
        <CardHeader>
          <CardTitle className="text-center mb-6">Results</CardTitle>
          {/* <section className="grid grid-cols-5 gap-8">
            {indicators.map((indocator) => (
              <Card key={indocator} className="text-center">
                <CardHeader className="items-center py-3">
                  <CompetencyIcon indicator={indocator} size={20} />
                </CardHeader>
                <CardContent className="pb-2">
                  <CompetencyProgress
                    indicator={indocator}
                    value={60}
                    className="h-3"
                  />
                </CardContent>
                <CardFooter className="pb-2 text-xs">
                  <span className="grow text-center first-letter:capitalize">
                    {indocator.replaceAll("-", " ")}
                  </span>
                </CardFooter>
              </Card>
            ))}
          </section> */}
        </CardHeader>
        <CardContent className="grid grid-cols-2 gap-20">
          {competenciesWithIncidactors.map((competenctWithIndicators) => (
            <CompetencyResult
              key={competenctWithIndicators.name}
              competencyWithIndicators={competenctWithIndicators}
            />
          ))}
        </CardContent>
      </Card>
    </div>
  );
}

const markdown = `# Feedback
You demonstrate a good understanding of your individual contributions to the team, and you've evaluated how the team's efforts have contributed to your personal development. However, we'd like to see more concrete examples of how you've applied peer perspective to improve your teamwork approach.

## Positives
I appreciate that you've identified areas where your project could be improved, such as making it more emotionally impactful.

## Areas for improvement
While you mention exploring ways to make the project more emotionally impactful, we would have liked to see a more nuanced analysis of how this could be achieved in practice. Consider providing specific suggestions for how you would implement this in future projects.

The student could also reflect on areas where they felt the team's efforts did not contribute to their personal development and how they would improve it in future projects.
`;

function CompetencyResult(props: {
  competencyWithIndicators: CompetencyWithIndicators;
}) {
  return (
    <section className="flex space-x-4">
      <CompetencyIconWithBackground
        competency={props.competencyWithIndicators.name}
      />
      <div className="grow">
        <h2 className="font-bold mb-2">
          <CompetencyDisplay competency={props.competencyWithIndicators.name} />
        </h2>
        <ol className="space-y-2">
          {props.competencyWithIndicators.indicators.map((indicator) => (
            <li key={indicator.name} className="flex space-x-4 items-center">
              <div className="flex-grow">{indicator.name}</div>
              <IndicatorLevelProgress grade={indicator.feedback?.grade} />
              <Dialog>
                <DialogTrigger asChild>
                  <Button variant="link" disabled={!indicator.feedback}>
                    Read feedback
                  </Button>
                </DialogTrigger>
                <DialogContent className="max-w-4xl">
                  <DialogHeader>
                    <DialogTitle className="flex space-x-4">
                      <CompetencyIconWithBackground
                        competency={props.competencyWithIndicators.name}
                      />
                      <div className="flex flex-col justify-between">
                        <CompetencyDisplay
                          competency={props.competencyWithIndicators.name}
                        />
                        <span className="text-sm font-light">
                          {indicator.name}
                        </span>
                      </div>
                    </DialogTitle>
                  </DialogHeader>
                  <DialogDescription>
                    The feedback below is generated by a Large Langiage Model
                    (LLM) and is inherently flawed. The feedback is meant as an
                    initial starting point for your reflection, please refer to
                    the teaching staff for proper feedback and guidance.
                  </DialogDescription>
                  <section className="flex space-x-8">
                    <IndicatorLevelProgress grade="visionary" />
                    <ScrollArea className="max-h-[55vh]">
                      <Button
                        variant="outline"
                        size="icon"
                        className="absolute right-4 top-0"
                        onClick={() => {
                          navigator.clipboard.writeText(`
========================
⚠️ Disclaimer ⚠️
The feedback below is generated by a Large Langiage Model
(LLM) and is inherently flawed. The feedback is meant as an
initial starting point for your reflection, please refer to
the teaching staff for proper feedback and guidance.
========================

Feedback generated on 31/03/1994 23:04 using ollama3

------------------------
${props.competencyWithIndicators.name.replaceAll("-", " ")} - ${indicator}
------------------------

${markdown}`);
                          toast.success("Feedback copied to clipboard");
                        }}
                      >
                        <Copy />
                      </Button>
                      <Markdown
                        components={{
                          h1: ({ children }) => (
                            <h1 className="font-bold text-xl">{children}</h1>
                          ),
                          h2: ({ children }) => (
                            <h2 className="font-semibold mt-4 text-lg">
                              {children}
                            </h2>
                          ),
                          p: ({ children }) => (
                            <p className="mb-0.5">{children}</p>
                          ),
                          ul: ({ children }) => (
                            <ul className="list-disc list-inside">
                              {children}
                            </ul>
                          ),
                          ol: ({ children }) => (
                            <ol className="list-decimal list-inside">
                              {children}
                            </ol>
                          ),
                        }}
                      >
                        {markdown}
                      </Markdown>
                    </ScrollArea>
                  </section>
                  <div className="mt-3 italic text-muted-foreground text-center text-xs">
                    Feedback generated using ollama3 at 31/03/1994 23:04
                  </div>
                  <DialogFooter className="grid grid-cols-2">
                    <Button variant="outline">
                      <ArrowLeft />
                      Previous disciplinary
                    </Button>
                    <Button>
                      Next disciplinary
                      <ArrowRight />
                    </Button>
                  </DialogFooter>
                </DialogContent>
              </Dialog>
            </li>
          ))}
        </ol>
      </div>
    </section>
  );
}
